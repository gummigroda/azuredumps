name: "Dump stuff from Azure"

on:
  workflow_dispatch:
  schedule:
    - cron:  '44 6 * * *'

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  Get-AzRoles:
    runs-on: ubuntu-latest
    env:
      azRolesPath: 'azRoles/'
      newBranch: 'Automated-Dump'

    steps:
      ## CHECKOUT CODE
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      ## LOG IN TO AZURE
      - name: Login with AZ CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      ## Create new branch
      - name: Checkout new branch
        shell: pwsh
        run: |
          git checkout -b $env:newBranch

      ## DUMP AZ ROLE DEFINITIONS
      - name: Get Azure Role Definitions
        id: getAzRolDefs
        uses: azure/powershell@v1
        with:
          azPSVersion: "11.1.0"
          inlineScript: ./scripts/Get-AzureRoleDefinitions.ps1 -Path $env:azRolesPath

      ## Do a git diff
      - name: Git diff
        id: gitDiff
        shell: pwsh
        run: |
          [array]$sts=(git status --short)
          Write-Output ("Git Diff Status:`n{0}" -f $sts)
          if ($sts -match $env:azRolesPath) {
            "FILES_CHANGED=yes" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }
          else {
            "FILES_CHANGED=no" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }

      # Add files if changed
      - name: Git Add, Commit and Push
        id: gitAdd
        if: steps.gitDiff.outputs.FILES_CHANGED == 'yes'
        shell: pwsh
        run: |
          git config user.name DumpTruck
          git config user.email dumptruck@users.noreply.github.com
          git add "$env:azRolesPath"
          git commit -m "Added updated role definitions"
          git push origin $env:newBranch -f

      # Create and Merge PR
      - name: Create and Merge PR
        id: githubPR
        if: steps.gitDiff.outputs.FILES_CHANGED == 'yes'
        shell: pwsh
        run: |
          $prBody = "Changes downloaded from Azure: {0}" -f (Get-Date).ToString('s')
          gh pr create --title "Automated Dumps from Azure" --body $prBody --base 'main' --head $env:newBranch
          gh pr merge "$env:newBranch" --squash --delete-branch

          